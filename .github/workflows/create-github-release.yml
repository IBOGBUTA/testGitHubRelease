name: Print multiline env

on:
  workflow_dispatch:
    branches:
      - master

jobs:
  create_release:
    runs-on: ubuntu-latest
    env:
      MULTI_LINES_TEXT_ENV_VAR: ${{ steps.set_env.outputs.multi_lines_text_env_var }}
    steps:
      - name: Set env variable with multi-line text
        id: set_env
        run: |
          echo "MULTI_LINES_TEXT_ENV_VAR=$(cat somefile)" >> $GITHUB_ENV
          echo "::set-output name=multi_lines_text_env_var::${MULTI_LINES_TEXT_ENV_VAR}"
      - name: Print env variable
        run: |
          echo "Multi-line text:"
          echo "${MULTI_LINES_TEXT_ENV_VAR}"


      #- name: Checkout code
      #  uses: actions/checkout@v2

      #- name: Get previous tag
      #  id: prev_tag
      #  run: |
      #    echo ::set-output name=prev_tag::$(git describe --abbrev=0 $(git rev-list --tags='v*' --skip=1 --max-count=1))

      #- name: Get current tag
      #  id: current_tag
      #  run: echo ::set-output name=current_tag::$(echo "${GITHUB_REF#refs/tags/}")

      #- name: List commits between tags
      #  id: commits
      #  run: |
      #    echo "Commits between ${prev_tag} and ${current_tag}:"
      #    git log --pretty=format:"%h %s" ${prev_tag}...${current_tag}

      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  with:
      #    tag_name: ${{ steps.current_tag.outputs.current_tag }}
      #    release_name: ${{ steps.current_tag.outputs.current_tag }}
      #    body: |
      #      Commits between ${prev_tag} and ${current_tag}:
      #      ${{ steps.commits.outputs.commits }}
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
